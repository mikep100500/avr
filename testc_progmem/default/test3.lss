
test3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  0000044c  000004e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000044c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800106  00800106  000004e6  2**0
                  ALLOC
  3 .stab         000007d4  00000000  00000000  000004e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000152  00000000  00000000  00000cbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000048  00000000  00000000  00000e0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000000a3  00000000  00000000  00000e56  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000003e4  00000000  00000000  00000ef9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000001b0  00000000  00000000  000012dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000550  00000000  00000000  0000148d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000050  00000000  00000000  000019e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000001a8  00000000  00000000  00001a30  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000429  00000000  00000000  00001bd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 00000064  00000000  00000000  00002001  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000018  00000000  00000000  00002065  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000068 <fick>:
  68:	66 75 63 6b 6f 6e 00 00                             fuckon..

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d8 e0       	ldi	r29, 0x08	; 8
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ec e4       	ldi	r30, 0x4C	; 76
  84:	f4 e0       	ldi	r31, 0x04	; 4
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a6 30       	cpi	r26, 0x06	; 6
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	11 e0       	ldi	r17, 0x01	; 1
  94:	a6 e0       	ldi	r26, 0x06	; 6
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	aa 30       	cpi	r26, 0x0A	; 10
  9e:	b1 07       	cpc	r27, r17
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 24 02 	jmp	0x448	; 0x448 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:
#include <string.h>

char fick[] PROGMEM="fuckon";

int main(void)
{
  ae:	1f 93       	push	r17
  b0:	df 93       	push	r29
  b2:	cf 93       	push	r28
  b4:	cd b7       	in	r28, 0x3d	; 61
  b6:	de b7       	in	r29, 0x3e	; 62
  b8:	29 97       	sbiw	r28, 0x09	; 9
  ba:	0f b6       	in	r0, 0x3f	; 63
  bc:	f8 94       	cli
  be:	de bf       	out	0x3e, r29	; 62
  c0:	0f be       	out	0x3f, r0	; 63
  c2:	cd bf       	out	0x3d, r28	; 61
#define baudrate 9600L
#define bauddivider (XTAL/(16*baudrate)-1)
#define HI(x) ((x)>>8)
#define LO(x) ((x)& 0xFF)
 
UBRR0L = LO(bauddivider);
  c4:	84 ec       	ldi	r24, 0xC4	; 196
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	27 e6       	ldi	r18, 0x67	; 103
  ca:	fc 01       	movw	r30, r24
  cc:	20 83       	st	Z, r18
UBRR0H = HI(bauddivider);
  ce:	85 ec       	ldi	r24, 0xC5	; 197
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	fc 01       	movw	r30, r24
  d4:	10 82       	st	Z, r1
UCSR0A = 0;
  d6:	80 ec       	ldi	r24, 0xC0	; 192
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	fc 01       	movw	r30, r24
  dc:	10 82       	st	Z, r1
UCSR0B = 1<<RXEN0|1<<TXEN0|0<<RXCIE0|0<<TXCIE0;
  de:	81 ec       	ldi	r24, 0xC1	; 193
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	28 e1       	ldi	r18, 0x18	; 24
  e4:	fc 01       	movw	r30, r24
  e6:	20 83       	st	Z, r18
UCSR0C = 1<<UCSZ00 | 1<<UCSZ01; 
  e8:	82 ec       	ldi	r24, 0xC2	; 194
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	26 e0       	ldi	r18, 0x06	; 6
  ee:	fc 01       	movw	r30, r24
  f0:	20 83       	st	Z, r18



char *iPtr;

iPtr=(char *)malloc(100);
  f2:	84 e6       	ldi	r24, 0x64	; 100
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	0e 94 df 00 	call	0x1be	; 0x1be <malloc>
  fa:	9a 83       	std	Y+2, r25	; 0x02
  fc:	89 83       	std	Y+1, r24	; 0x01
strcpy_P(iPtr,fick);
  fe:	89 81       	ldd	r24, Y+1	; 0x01
 100:	9a 81       	ldd	r25, Y+2	; 0x02
 102:	28 e6       	ldi	r18, 0x68	; 104
 104:	30 e0       	ldi	r19, 0x00	; 0
 106:	b9 01       	movw	r22, r18
 108:	0e 94 12 02 	call	0x424	; 0x424 <strcpy_P>

char len=strnlen_P(fick,100);
 10c:	88 e6       	ldi	r24, 0x68	; 104
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	64 e6       	ldi	r22, 0x64	; 100
 112:	70 e0       	ldi	r23, 0x00	; 0
 114:	0e 94 19 02 	call	0x432	; 0x432 <strnlen_P>
 118:	8c 83       	std	Y+4, r24	; 0x04
char *iEnd=iPtr+len;
 11a:	8c 81       	ldd	r24, Y+4	; 0x04
 11c:	88 2f       	mov	r24, r24
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	29 81       	ldd	r18, Y+1	; 0x01
 122:	3a 81       	ldd	r19, Y+2	; 0x02
 124:	82 0f       	add	r24, r18
 126:	93 1f       	adc	r25, r19
 128:	9e 83       	std	Y+6, r25	; 0x06
 12a:	8d 83       	std	Y+5, r24	; 0x05




while (iPtr<iEnd) {
 12c:	18 c0       	rjmp	.+48     	; 0x15e <main+0xb0>

	while ( ! (UCSR0A & (1 << UDRE0)))  ;
 12e:	00 00       	nop
 130:	80 ec       	ldi	r24, 0xC0	; 192
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	fc 01       	movw	r30, r24
 136:	80 81       	ld	r24, Z
 138:	88 2f       	mov	r24, r24
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	80 72       	andi	r24, 0x20	; 32
 13e:	90 70       	andi	r25, 0x00	; 0
 140:	00 97       	sbiw	r24, 0x00	; 0
 142:	b1 f3       	breq	.-20     	; 0x130 <main+0x82>
    UDR0=*iPtr;
 144:	86 ec       	ldi	r24, 0xC6	; 198
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	29 81       	ldd	r18, Y+1	; 0x01
 14a:	3a 81       	ldd	r19, Y+2	; 0x02
 14c:	f9 01       	movw	r30, r18
 14e:	20 81       	ld	r18, Z
 150:	fc 01       	movw	r30, r24
 152:	20 83       	st	Z, r18
	iPtr++;
 154:	89 81       	ldd	r24, Y+1	; 0x01
 156:	9a 81       	ldd	r25, Y+2	; 0x02
 158:	01 96       	adiw	r24, 0x01	; 1
 15a:	9a 83       	std	Y+2, r25	; 0x02
 15c:	89 83       	std	Y+1, r24	; 0x01
char *iEnd=iPtr+len;




while (iPtr<iEnd) {
 15e:	29 81       	ldd	r18, Y+1	; 0x01
 160:	3a 81       	ldd	r19, Y+2	; 0x02
 162:	8d 81       	ldd	r24, Y+5	; 0x05
 164:	9e 81       	ldd	r25, Y+6	; 0x06
 166:	28 17       	cp	r18, r24
 168:	39 07       	cpc	r19, r25
 16a:	08 f3       	brcs	.-62     	; 0x12e <main+0x80>

}



for(char idx=len-1;idx>=0;idx--) {
 16c:	8c 81       	ldd	r24, Y+4	; 0x04
 16e:	81 50       	subi	r24, 0x01	; 1
 170:	8b 83       	std	Y+3, r24	; 0x03

	while ( ! (UCSR0A & (1 << UDRE0)))  ;
 172:	00 00       	nop
 174:	80 ec       	ldi	r24, 0xC0	; 192
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	fc 01       	movw	r30, r24
 17a:	80 81       	ld	r24, Z
 17c:	88 2f       	mov	r24, r24
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	80 72       	andi	r24, 0x20	; 32
 182:	90 70       	andi	r25, 0x00	; 0
 184:	00 97       	sbiw	r24, 0x00	; 0
 186:	b1 f3       	breq	.-20     	; 0x174 <main+0xc6>
    UDR0=pgm_read_byte(fick+idx);
 188:	86 ec       	ldi	r24, 0xC6	; 198
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	2b 81       	ldd	r18, Y+3	; 0x03
 18e:	22 2f       	mov	r18, r18
 190:	30 e0       	ldi	r19, 0x00	; 0
 192:	28 59       	subi	r18, 0x98	; 152
 194:	3f 4f       	sbci	r19, 0xFF	; 255
 196:	38 87       	std	Y+8, r19	; 0x08
 198:	2f 83       	std	Y+7, r18	; 0x07
 19a:	2f 81       	ldd	r18, Y+7	; 0x07
 19c:	38 85       	ldd	r19, Y+8	; 0x08
 19e:	f9 01       	movw	r30, r18
 1a0:	14 91       	lpm	r17, Z+
 1a2:	19 87       	std	Y+9, r17	; 0x09
 1a4:	29 85       	ldd	r18, Y+9	; 0x09
 1a6:	fc 01       	movw	r30, r24
 1a8:	20 83       	st	Z, r18

if (idx==0) break;
 1aa:	8b 81       	ldd	r24, Y+3	; 0x03
 1ac:	88 23       	and	r24, r24
 1ae:	09 f4       	brne	.+2      	; 0x1b2 <main+0x104>
 1b0:	05 c0       	rjmp	.+10     	; 0x1bc <main+0x10e>

}



for(char idx=len-1;idx>=0;idx--) {
 1b2:	8b 81       	ldd	r24, Y+3	; 0x03
 1b4:	81 50       	subi	r24, 0x01	; 1
 1b6:	8b 83       	std	Y+3, r24	; 0x03
	while ( ! (UCSR0A & (1 << UDRE0)))  ;
    UDR0=pgm_read_byte(fick+idx);

if (idx==0) break;

}
 1b8:	00 00       	nop



for(char idx=len-1;idx>=0;idx--) {

	while ( ! (UCSR0A & (1 << UDRE0)))  ;
 1ba:	dc cf       	rjmp	.-72     	; 0x174 <main+0xc6>

if (idx==0) break;

}

while (1);
 1bc:	ff cf       	rjmp	.-2      	; 0x1bc <main+0x10e>

000001be <malloc>:
 1be:	cf 93       	push	r28
 1c0:	df 93       	push	r29
 1c2:	82 30       	cpi	r24, 0x02	; 2
 1c4:	91 05       	cpc	r25, r1
 1c6:	10 f4       	brcc	.+4      	; 0x1cc <malloc+0xe>
 1c8:	82 e0       	ldi	r24, 0x02	; 2
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	e0 91 08 01 	lds	r30, 0x0108
 1d0:	f0 91 09 01 	lds	r31, 0x0109
 1d4:	40 e0       	ldi	r20, 0x00	; 0
 1d6:	50 e0       	ldi	r21, 0x00	; 0
 1d8:	20 e0       	ldi	r18, 0x00	; 0
 1da:	30 e0       	ldi	r19, 0x00	; 0
 1dc:	26 c0       	rjmp	.+76     	; 0x22a <malloc+0x6c>
 1de:	60 81       	ld	r22, Z
 1e0:	71 81       	ldd	r23, Z+1	; 0x01
 1e2:	68 17       	cp	r22, r24
 1e4:	79 07       	cpc	r23, r25
 1e6:	e0 f0       	brcs	.+56     	; 0x220 <malloc+0x62>
 1e8:	68 17       	cp	r22, r24
 1ea:	79 07       	cpc	r23, r25
 1ec:	81 f4       	brne	.+32     	; 0x20e <malloc+0x50>
 1ee:	82 81       	ldd	r24, Z+2	; 0x02
 1f0:	93 81       	ldd	r25, Z+3	; 0x03
 1f2:	21 15       	cp	r18, r1
 1f4:	31 05       	cpc	r19, r1
 1f6:	31 f0       	breq	.+12     	; 0x204 <malloc+0x46>
 1f8:	d9 01       	movw	r26, r18
 1fa:	13 96       	adiw	r26, 0x03	; 3
 1fc:	9c 93       	st	X, r25
 1fe:	8e 93       	st	-X, r24
 200:	12 97       	sbiw	r26, 0x02	; 2
 202:	2b c0       	rjmp	.+86     	; 0x25a <malloc+0x9c>
 204:	90 93 09 01 	sts	0x0109, r25
 208:	80 93 08 01 	sts	0x0108, r24
 20c:	26 c0       	rjmp	.+76     	; 0x25a <malloc+0x9c>
 20e:	41 15       	cp	r20, r1
 210:	51 05       	cpc	r21, r1
 212:	19 f0       	breq	.+6      	; 0x21a <malloc+0x5c>
 214:	64 17       	cp	r22, r20
 216:	75 07       	cpc	r23, r21
 218:	18 f4       	brcc	.+6      	; 0x220 <malloc+0x62>
 21a:	ab 01       	movw	r20, r22
 21c:	e9 01       	movw	r28, r18
 21e:	df 01       	movw	r26, r30
 220:	9f 01       	movw	r18, r30
 222:	72 81       	ldd	r23, Z+2	; 0x02
 224:	63 81       	ldd	r22, Z+3	; 0x03
 226:	e7 2f       	mov	r30, r23
 228:	f6 2f       	mov	r31, r22
 22a:	30 97       	sbiw	r30, 0x00	; 0
 22c:	c1 f6       	brne	.-80     	; 0x1de <malloc+0x20>
 22e:	41 15       	cp	r20, r1
 230:	51 05       	cpc	r21, r1
 232:	01 f1       	breq	.+64     	; 0x274 <malloc+0xb6>
 234:	48 1b       	sub	r20, r24
 236:	59 0b       	sbc	r21, r25
 238:	44 30       	cpi	r20, 0x04	; 4
 23a:	51 05       	cpc	r21, r1
 23c:	80 f4       	brcc	.+32     	; 0x25e <malloc+0xa0>
 23e:	12 96       	adiw	r26, 0x02	; 2
 240:	8d 91       	ld	r24, X+
 242:	9c 91       	ld	r25, X
 244:	13 97       	sbiw	r26, 0x03	; 3
 246:	20 97       	sbiw	r28, 0x00	; 0
 248:	19 f0       	breq	.+6      	; 0x250 <malloc+0x92>
 24a:	9b 83       	std	Y+3, r25	; 0x03
 24c:	8a 83       	std	Y+2, r24	; 0x02
 24e:	04 c0       	rjmp	.+8      	; 0x258 <malloc+0x9a>
 250:	90 93 09 01 	sts	0x0109, r25
 254:	80 93 08 01 	sts	0x0108, r24
 258:	fd 01       	movw	r30, r26
 25a:	32 96       	adiw	r30, 0x02	; 2
 25c:	46 c0       	rjmp	.+140    	; 0x2ea <malloc+0x12c>
 25e:	fd 01       	movw	r30, r26
 260:	e4 0f       	add	r30, r20
 262:	f5 1f       	adc	r31, r21
 264:	81 93       	st	Z+, r24
 266:	91 93       	st	Z+, r25
 268:	42 50       	subi	r20, 0x02	; 2
 26a:	50 40       	sbci	r21, 0x00	; 0
 26c:	11 96       	adiw	r26, 0x01	; 1
 26e:	5c 93       	st	X, r21
 270:	4e 93       	st	-X, r20
 272:	3b c0       	rjmp	.+118    	; 0x2ea <malloc+0x12c>
 274:	20 91 06 01 	lds	r18, 0x0106
 278:	30 91 07 01 	lds	r19, 0x0107
 27c:	21 15       	cp	r18, r1
 27e:	31 05       	cpc	r19, r1
 280:	41 f4       	brne	.+16     	; 0x292 <malloc+0xd4>
 282:	20 91 02 01 	lds	r18, 0x0102
 286:	30 91 03 01 	lds	r19, 0x0103
 28a:	30 93 07 01 	sts	0x0107, r19
 28e:	20 93 06 01 	sts	0x0106, r18
 292:	20 91 04 01 	lds	r18, 0x0104
 296:	30 91 05 01 	lds	r19, 0x0105
 29a:	21 15       	cp	r18, r1
 29c:	31 05       	cpc	r19, r1
 29e:	41 f4       	brne	.+16     	; 0x2b0 <malloc+0xf2>
 2a0:	2d b7       	in	r18, 0x3d	; 61
 2a2:	3e b7       	in	r19, 0x3e	; 62
 2a4:	40 91 00 01 	lds	r20, 0x0100
 2a8:	50 91 01 01 	lds	r21, 0x0101
 2ac:	24 1b       	sub	r18, r20
 2ae:	35 0b       	sbc	r19, r21
 2b0:	e0 91 06 01 	lds	r30, 0x0106
 2b4:	f0 91 07 01 	lds	r31, 0x0107
 2b8:	e2 17       	cp	r30, r18
 2ba:	f3 07       	cpc	r31, r19
 2bc:	a0 f4       	brcc	.+40     	; 0x2e6 <malloc+0x128>
 2be:	2e 1b       	sub	r18, r30
 2c0:	3f 0b       	sbc	r19, r31
 2c2:	28 17       	cp	r18, r24
 2c4:	39 07       	cpc	r19, r25
 2c6:	78 f0       	brcs	.+30     	; 0x2e6 <malloc+0x128>
 2c8:	ac 01       	movw	r20, r24
 2ca:	4e 5f       	subi	r20, 0xFE	; 254
 2cc:	5f 4f       	sbci	r21, 0xFF	; 255
 2ce:	24 17       	cp	r18, r20
 2d0:	35 07       	cpc	r19, r21
 2d2:	48 f0       	brcs	.+18     	; 0x2e6 <malloc+0x128>
 2d4:	4e 0f       	add	r20, r30
 2d6:	5f 1f       	adc	r21, r31
 2d8:	50 93 07 01 	sts	0x0107, r21
 2dc:	40 93 06 01 	sts	0x0106, r20
 2e0:	81 93       	st	Z+, r24
 2e2:	91 93       	st	Z+, r25
 2e4:	02 c0       	rjmp	.+4      	; 0x2ea <malloc+0x12c>
 2e6:	e0 e0       	ldi	r30, 0x00	; 0
 2e8:	f0 e0       	ldi	r31, 0x00	; 0
 2ea:	cf 01       	movw	r24, r30
 2ec:	df 91       	pop	r29
 2ee:	cf 91       	pop	r28
 2f0:	08 95       	ret

000002f2 <free>:
 2f2:	cf 93       	push	r28
 2f4:	df 93       	push	r29
 2f6:	00 97       	sbiw	r24, 0x00	; 0
 2f8:	09 f4       	brne	.+2      	; 0x2fc <free+0xa>
 2fa:	91 c0       	rjmp	.+290    	; 0x41e <free+0x12c>
 2fc:	fc 01       	movw	r30, r24
 2fe:	32 97       	sbiw	r30, 0x02	; 2
 300:	13 82       	std	Z+3, r1	; 0x03
 302:	12 82       	std	Z+2, r1	; 0x02
 304:	60 91 08 01 	lds	r22, 0x0108
 308:	70 91 09 01 	lds	r23, 0x0109
 30c:	61 15       	cp	r22, r1
 30e:	71 05       	cpc	r23, r1
 310:	81 f4       	brne	.+32     	; 0x332 <free+0x40>
 312:	20 81       	ld	r18, Z
 314:	31 81       	ldd	r19, Z+1	; 0x01
 316:	28 0f       	add	r18, r24
 318:	39 1f       	adc	r19, r25
 31a:	80 91 06 01 	lds	r24, 0x0106
 31e:	90 91 07 01 	lds	r25, 0x0107
 322:	82 17       	cp	r24, r18
 324:	93 07       	cpc	r25, r19
 326:	99 f5       	brne	.+102    	; 0x38e <free+0x9c>
 328:	f0 93 07 01 	sts	0x0107, r31
 32c:	e0 93 06 01 	sts	0x0106, r30
 330:	76 c0       	rjmp	.+236    	; 0x41e <free+0x12c>
 332:	db 01       	movw	r26, r22
 334:	80 e0       	ldi	r24, 0x00	; 0
 336:	90 e0       	ldi	r25, 0x00	; 0
 338:	02 c0       	rjmp	.+4      	; 0x33e <free+0x4c>
 33a:	cd 01       	movw	r24, r26
 33c:	d9 01       	movw	r26, r18
 33e:	ae 17       	cp	r26, r30
 340:	bf 07       	cpc	r27, r31
 342:	48 f4       	brcc	.+18     	; 0x356 <free+0x64>
 344:	12 96       	adiw	r26, 0x02	; 2
 346:	2d 91       	ld	r18, X+
 348:	3c 91       	ld	r19, X
 34a:	13 97       	sbiw	r26, 0x03	; 3
 34c:	21 15       	cp	r18, r1
 34e:	31 05       	cpc	r19, r1
 350:	a1 f7       	brne	.-24     	; 0x33a <free+0x48>
 352:	cd 01       	movw	r24, r26
 354:	21 c0       	rjmp	.+66     	; 0x398 <free+0xa6>
 356:	b3 83       	std	Z+3, r27	; 0x03
 358:	a2 83       	std	Z+2, r26	; 0x02
 35a:	ef 01       	movw	r28, r30
 35c:	49 91       	ld	r20, Y+
 35e:	59 91       	ld	r21, Y+
 360:	9e 01       	movw	r18, r28
 362:	24 0f       	add	r18, r20
 364:	35 1f       	adc	r19, r21
 366:	a2 17       	cp	r26, r18
 368:	b3 07       	cpc	r27, r19
 36a:	79 f4       	brne	.+30     	; 0x38a <free+0x98>
 36c:	2d 91       	ld	r18, X+
 36e:	3c 91       	ld	r19, X
 370:	11 97       	sbiw	r26, 0x01	; 1
 372:	24 0f       	add	r18, r20
 374:	35 1f       	adc	r19, r21
 376:	2e 5f       	subi	r18, 0xFE	; 254
 378:	3f 4f       	sbci	r19, 0xFF	; 255
 37a:	31 83       	std	Z+1, r19	; 0x01
 37c:	20 83       	st	Z, r18
 37e:	12 96       	adiw	r26, 0x02	; 2
 380:	2d 91       	ld	r18, X+
 382:	3c 91       	ld	r19, X
 384:	13 97       	sbiw	r26, 0x03	; 3
 386:	33 83       	std	Z+3, r19	; 0x03
 388:	22 83       	std	Z+2, r18	; 0x02
 38a:	00 97       	sbiw	r24, 0x00	; 0
 38c:	29 f4       	brne	.+10     	; 0x398 <free+0xa6>
 38e:	f0 93 09 01 	sts	0x0109, r31
 392:	e0 93 08 01 	sts	0x0108, r30
 396:	43 c0       	rjmp	.+134    	; 0x41e <free+0x12c>
 398:	dc 01       	movw	r26, r24
 39a:	13 96       	adiw	r26, 0x03	; 3
 39c:	fc 93       	st	X, r31
 39e:	ee 93       	st	-X, r30
 3a0:	12 97       	sbiw	r26, 0x02	; 2
 3a2:	4d 91       	ld	r20, X+
 3a4:	5d 91       	ld	r21, X+
 3a6:	a4 0f       	add	r26, r20
 3a8:	b5 1f       	adc	r27, r21
 3aa:	ea 17       	cp	r30, r26
 3ac:	fb 07       	cpc	r31, r27
 3ae:	69 f4       	brne	.+26     	; 0x3ca <free+0xd8>
 3b0:	20 81       	ld	r18, Z
 3b2:	31 81       	ldd	r19, Z+1	; 0x01
 3b4:	24 0f       	add	r18, r20
 3b6:	35 1f       	adc	r19, r21
 3b8:	2e 5f       	subi	r18, 0xFE	; 254
 3ba:	3f 4f       	sbci	r19, 0xFF	; 255
 3bc:	ec 01       	movw	r28, r24
 3be:	39 83       	std	Y+1, r19	; 0x01
 3c0:	28 83       	st	Y, r18
 3c2:	22 81       	ldd	r18, Z+2	; 0x02
 3c4:	33 81       	ldd	r19, Z+3	; 0x03
 3c6:	3b 83       	std	Y+3, r19	; 0x03
 3c8:	2a 83       	std	Y+2, r18	; 0x02
 3ca:	e0 e0       	ldi	r30, 0x00	; 0
 3cc:	f0 e0       	ldi	r31, 0x00	; 0
 3ce:	02 c0       	rjmp	.+4      	; 0x3d4 <free+0xe2>
 3d0:	fb 01       	movw	r30, r22
 3d2:	bc 01       	movw	r22, r24
 3d4:	db 01       	movw	r26, r22
 3d6:	12 96       	adiw	r26, 0x02	; 2
 3d8:	8d 91       	ld	r24, X+
 3da:	9c 91       	ld	r25, X
 3dc:	13 97       	sbiw	r26, 0x03	; 3
 3de:	00 97       	sbiw	r24, 0x00	; 0
 3e0:	b9 f7       	brne	.-18     	; 0x3d0 <free+0xde>
 3e2:	9b 01       	movw	r18, r22
 3e4:	2e 5f       	subi	r18, 0xFE	; 254
 3e6:	3f 4f       	sbci	r19, 0xFF	; 255
 3e8:	8d 91       	ld	r24, X+
 3ea:	9c 91       	ld	r25, X
 3ec:	11 97       	sbiw	r26, 0x01	; 1
 3ee:	82 0f       	add	r24, r18
 3f0:	93 1f       	adc	r25, r19
 3f2:	40 91 06 01 	lds	r20, 0x0106
 3f6:	50 91 07 01 	lds	r21, 0x0107
 3fa:	48 17       	cp	r20, r24
 3fc:	59 07       	cpc	r21, r25
 3fe:	79 f4       	brne	.+30     	; 0x41e <free+0x12c>
 400:	30 97       	sbiw	r30, 0x00	; 0
 402:	29 f4       	brne	.+10     	; 0x40e <free+0x11c>
 404:	10 92 09 01 	sts	0x0109, r1
 408:	10 92 08 01 	sts	0x0108, r1
 40c:	02 c0       	rjmp	.+4      	; 0x412 <free+0x120>
 40e:	13 82       	std	Z+3, r1	; 0x03
 410:	12 82       	std	Z+2, r1	; 0x02
 412:	22 50       	subi	r18, 0x02	; 2
 414:	30 40       	sbci	r19, 0x00	; 0
 416:	30 93 07 01 	sts	0x0107, r19
 41a:	20 93 06 01 	sts	0x0106, r18
 41e:	df 91       	pop	r29
 420:	cf 91       	pop	r28
 422:	08 95       	ret

00000424 <strcpy_P>:
 424:	fb 01       	movw	r30, r22
 426:	dc 01       	movw	r26, r24
 428:	05 90       	lpm	r0, Z+
 42a:	0d 92       	st	X+, r0
 42c:	00 20       	and	r0, r0
 42e:	e1 f7       	brne	.-8      	; 0x428 <strcpy_P+0x4>
 430:	08 95       	ret

00000432 <strnlen_P>:
 432:	fc 01       	movw	r30, r24
 434:	05 90       	lpm	r0, Z+
 436:	61 50       	subi	r22, 0x01	; 1
 438:	70 40       	sbci	r23, 0x00	; 0
 43a:	01 10       	cpse	r0, r1
 43c:	d8 f7       	brcc	.-10     	; 0x434 <strnlen_P+0x2>
 43e:	80 95       	com	r24
 440:	90 95       	com	r25
 442:	8e 0f       	add	r24, r30
 444:	9f 1f       	adc	r25, r31
 446:	08 95       	ret

00000448 <_exit>:
 448:	f8 94       	cli

0000044a <__stop_program>:
 44a:	ff cf       	rjmp	.-2      	; 0x44a <__stop_program>
