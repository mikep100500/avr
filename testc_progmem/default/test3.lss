
test3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  000002fa  0000038e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002fa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800106  00800106  00000394  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  00000394  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000024  00000000  00000000  000003b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000000c0  00000000  00000000  000003d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000008c  00000000  00000000  00000498  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000094  00000000  00000000  00000524  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000020  00000000  00000000  000005b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000083  00000000  00000000  000005d8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000068 <fick>:
  68:	66 75 63 6b 6f 66 66 00                             fuckoff.

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d8 e0       	ldi	r29, 0x08	; 8
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ea ef       	ldi	r30, 0xFA	; 250
  84:	f2 e0       	ldi	r31, 0x02	; 2
  86:	02 c0       	rjmp	.+4      	; 0x8c <.do_copy_data_start>

00000088 <.do_copy_data_loop>:
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0

0000008c <.do_copy_data_start>:
  8c:	a6 30       	cpi	r26, 0x06	; 6
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <.do_copy_data_loop>

00000092 <__do_clear_bss>:
  92:	11 e0       	ldi	r17, 0x01	; 1
  94:	a6 e0       	ldi	r26, 0x06	; 6
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	aa 30       	cpi	r26, 0x0A	; 10
  9e:	b1 07       	cpc	r27, r17
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 7b 01 	jmp	0x2f6	; 0x2f6 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:
#define baudrate 9600L
#define bauddivider (XTAL/(16*baudrate)-1)
#define HI(x) ((x)>>8)
#define LO(x) ((x)& 0xFF)
 
UBRR0L = LO(bauddivider);
  ae:	83 e3       	ldi	r24, 0x33	; 51
  b0:	80 93 c4 00 	sts	0x00C4, r24
UBRR0H = HI(bauddivider);
  b4:	10 92 c5 00 	sts	0x00C5, r1
UCSR0A = 0;
  b8:	10 92 c0 00 	sts	0x00C0, r1
UCSR0B = 1<<RXEN0|1<<TXEN0|1<<RXCIE0|0<<TXCIE0;
  bc:	88 e9       	ldi	r24, 0x98	; 152
  be:	80 93 c1 00 	sts	0x00C1, r24
UCSR0C = 1<<UCSZ00 | 1<<UCSZ01; 
  c2:	86 e0       	ldi	r24, 0x06	; 6
  c4:	80 93 c2 00 	sts	0x00C2, r24

char *iPtr;

iPtr=(char *)malloc(100);
  c8:	84 e6       	ldi	r24, 0x64	; 100
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	0e 94 6f 00 	call	0xde	; 0xde <malloc>
strcpy_P(iPtr,fick);
  d0:	68 e6       	ldi	r22, 0x68	; 104
  d2:	70 e0       	ldi	r23, 0x00	; 0
  d4:	0e 94 74 01 	call	0x2e8	; 0x2e8 <strcpy_P>


}
  d8:	80 e0       	ldi	r24, 0x00	; 0
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	08 95       	ret

000000de <malloc>:
  de:	cf 93       	push	r28
  e0:	df 93       	push	r29
  e2:	bc 01       	movw	r22, r24
  e4:	82 30       	cpi	r24, 0x02	; 2
  e6:	91 05       	cpc	r25, r1
  e8:	10 f4       	brcc	.+4      	; 0xee <malloc+0x10>
  ea:	62 e0       	ldi	r22, 0x02	; 2
  ec:	70 e0       	ldi	r23, 0x00	; 0
  ee:	a0 91 08 01 	lds	r26, 0x0108
  f2:	b0 91 09 01 	lds	r27, 0x0109
  f6:	ed 01       	movw	r28, r26
  f8:	e0 e0       	ldi	r30, 0x00	; 0
  fa:	f0 e0       	ldi	r31, 0x00	; 0
  fc:	40 e0       	ldi	r20, 0x00	; 0
  fe:	50 e0       	ldi	r21, 0x00	; 0
 100:	21 c0       	rjmp	.+66     	; 0x144 <malloc+0x66>
 102:	88 81       	ld	r24, Y
 104:	99 81       	ldd	r25, Y+1	; 0x01
 106:	86 17       	cp	r24, r22
 108:	97 07       	cpc	r25, r23
 10a:	69 f4       	brne	.+26     	; 0x126 <malloc+0x48>
 10c:	8a 81       	ldd	r24, Y+2	; 0x02
 10e:	9b 81       	ldd	r25, Y+3	; 0x03
 110:	30 97       	sbiw	r30, 0x00	; 0
 112:	19 f0       	breq	.+6      	; 0x11a <malloc+0x3c>
 114:	93 83       	std	Z+3, r25	; 0x03
 116:	82 83       	std	Z+2, r24	; 0x02
 118:	04 c0       	rjmp	.+8      	; 0x122 <malloc+0x44>
 11a:	90 93 09 01 	sts	0x0109, r25
 11e:	80 93 08 01 	sts	0x0108, r24
 122:	fe 01       	movw	r30, r28
 124:	34 c0       	rjmp	.+104    	; 0x18e <malloc+0xb0>
 126:	68 17       	cp	r22, r24
 128:	79 07       	cpc	r23, r25
 12a:	38 f4       	brcc	.+14     	; 0x13a <malloc+0x5c>
 12c:	41 15       	cp	r20, r1
 12e:	51 05       	cpc	r21, r1
 130:	19 f0       	breq	.+6      	; 0x138 <malloc+0x5a>
 132:	84 17       	cp	r24, r20
 134:	95 07       	cpc	r25, r21
 136:	08 f4       	brcc	.+2      	; 0x13a <malloc+0x5c>
 138:	ac 01       	movw	r20, r24
 13a:	fe 01       	movw	r30, r28
 13c:	8a 81       	ldd	r24, Y+2	; 0x02
 13e:	9b 81       	ldd	r25, Y+3	; 0x03
 140:	9c 01       	movw	r18, r24
 142:	e9 01       	movw	r28, r18
 144:	20 97       	sbiw	r28, 0x00	; 0
 146:	e9 f6       	brne	.-70     	; 0x102 <malloc+0x24>
 148:	41 15       	cp	r20, r1
 14a:	51 05       	cpc	r21, r1
 14c:	a9 f1       	breq	.+106    	; 0x1b8 <malloc+0xda>
 14e:	ca 01       	movw	r24, r20
 150:	86 1b       	sub	r24, r22
 152:	97 0b       	sbc	r25, r23
 154:	04 97       	sbiw	r24, 0x04	; 4
 156:	08 f4       	brcc	.+2      	; 0x15a <malloc+0x7c>
 158:	ba 01       	movw	r22, r20
 15a:	e0 e0       	ldi	r30, 0x00	; 0
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	2a c0       	rjmp	.+84     	; 0x1b4 <malloc+0xd6>
 160:	8d 91       	ld	r24, X+
 162:	9c 91       	ld	r25, X
 164:	11 97       	sbiw	r26, 0x01	; 1
 166:	84 17       	cp	r24, r20
 168:	95 07       	cpc	r25, r21
 16a:	f9 f4       	brne	.+62     	; 0x1aa <malloc+0xcc>
 16c:	64 17       	cp	r22, r20
 16e:	75 07       	cpc	r23, r21
 170:	81 f4       	brne	.+32     	; 0x192 <malloc+0xb4>
 172:	12 96       	adiw	r26, 0x02	; 2
 174:	8d 91       	ld	r24, X+
 176:	9c 91       	ld	r25, X
 178:	13 97       	sbiw	r26, 0x03	; 3
 17a:	30 97       	sbiw	r30, 0x00	; 0
 17c:	19 f0       	breq	.+6      	; 0x184 <malloc+0xa6>
 17e:	93 83       	std	Z+3, r25	; 0x03
 180:	82 83       	std	Z+2, r24	; 0x02
 182:	04 c0       	rjmp	.+8      	; 0x18c <malloc+0xae>
 184:	90 93 09 01 	sts	0x0109, r25
 188:	80 93 08 01 	sts	0x0108, r24
 18c:	fd 01       	movw	r30, r26
 18e:	32 96       	adiw	r30, 0x02	; 2
 190:	4f c0       	rjmp	.+158    	; 0x230 <malloc+0x152>
 192:	ca 01       	movw	r24, r20
 194:	86 1b       	sub	r24, r22
 196:	97 0b       	sbc	r25, r23
 198:	fd 01       	movw	r30, r26
 19a:	e8 0f       	add	r30, r24
 19c:	f9 1f       	adc	r31, r25
 19e:	61 93       	st	Z+, r22
 1a0:	71 93       	st	Z+, r23
 1a2:	02 97       	sbiw	r24, 0x02	; 2
 1a4:	8d 93       	st	X+, r24
 1a6:	9c 93       	st	X, r25
 1a8:	43 c0       	rjmp	.+134    	; 0x230 <malloc+0x152>
 1aa:	fd 01       	movw	r30, r26
 1ac:	82 81       	ldd	r24, Z+2	; 0x02
 1ae:	93 81       	ldd	r25, Z+3	; 0x03
 1b0:	9c 01       	movw	r18, r24
 1b2:	d9 01       	movw	r26, r18
 1b4:	10 97       	sbiw	r26, 0x00	; 0
 1b6:	a1 f6       	brne	.-88     	; 0x160 <malloc+0x82>
 1b8:	80 91 06 01 	lds	r24, 0x0106
 1bc:	90 91 07 01 	lds	r25, 0x0107
 1c0:	89 2b       	or	r24, r25
 1c2:	41 f4       	brne	.+16     	; 0x1d4 <malloc+0xf6>
 1c4:	80 91 02 01 	lds	r24, 0x0102
 1c8:	90 91 03 01 	lds	r25, 0x0103
 1cc:	90 93 07 01 	sts	0x0107, r25
 1d0:	80 93 06 01 	sts	0x0106, r24
 1d4:	40 91 04 01 	lds	r20, 0x0104
 1d8:	50 91 05 01 	lds	r21, 0x0105
 1dc:	41 15       	cp	r20, r1
 1de:	51 05       	cpc	r21, r1
 1e0:	41 f4       	brne	.+16     	; 0x1f2 <malloc+0x114>
 1e2:	4d b7       	in	r20, 0x3d	; 61
 1e4:	5e b7       	in	r21, 0x3e	; 62
 1e6:	80 91 00 01 	lds	r24, 0x0100
 1ea:	90 91 01 01 	lds	r25, 0x0101
 1ee:	48 1b       	sub	r20, r24
 1f0:	59 0b       	sbc	r21, r25
 1f2:	20 91 06 01 	lds	r18, 0x0106
 1f6:	30 91 07 01 	lds	r19, 0x0107
 1fa:	24 17       	cp	r18, r20
 1fc:	35 07       	cpc	r19, r21
 1fe:	b0 f4       	brcc	.+44     	; 0x22c <malloc+0x14e>
 200:	ca 01       	movw	r24, r20
 202:	82 1b       	sub	r24, r18
 204:	93 0b       	sbc	r25, r19
 206:	86 17       	cp	r24, r22
 208:	97 07       	cpc	r25, r23
 20a:	80 f0       	brcs	.+32     	; 0x22c <malloc+0x14e>
 20c:	ab 01       	movw	r20, r22
 20e:	4e 5f       	subi	r20, 0xFE	; 254
 210:	5f 4f       	sbci	r21, 0xFF	; 255
 212:	84 17       	cp	r24, r20
 214:	95 07       	cpc	r25, r21
 216:	50 f0       	brcs	.+20     	; 0x22c <malloc+0x14e>
 218:	42 0f       	add	r20, r18
 21a:	53 1f       	adc	r21, r19
 21c:	50 93 07 01 	sts	0x0107, r21
 220:	40 93 06 01 	sts	0x0106, r20
 224:	f9 01       	movw	r30, r18
 226:	61 93       	st	Z+, r22
 228:	71 93       	st	Z+, r23
 22a:	02 c0       	rjmp	.+4      	; 0x230 <malloc+0x152>
 22c:	e0 e0       	ldi	r30, 0x00	; 0
 22e:	f0 e0       	ldi	r31, 0x00	; 0
 230:	cf 01       	movw	r24, r30
 232:	df 91       	pop	r29
 234:	cf 91       	pop	r28
 236:	08 95       	ret

00000238 <free>:
 238:	cf 93       	push	r28
 23a:	df 93       	push	r29
 23c:	00 97       	sbiw	r24, 0x00	; 0
 23e:	09 f4       	brne	.+2      	; 0x242 <free+0xa>
 240:	50 c0       	rjmp	.+160    	; 0x2e2 <free+0xaa>
 242:	ec 01       	movw	r28, r24
 244:	22 97       	sbiw	r28, 0x02	; 2
 246:	1b 82       	std	Y+3, r1	; 0x03
 248:	1a 82       	std	Y+2, r1	; 0x02
 24a:	a0 91 08 01 	lds	r26, 0x0108
 24e:	b0 91 09 01 	lds	r27, 0x0109
 252:	10 97       	sbiw	r26, 0x00	; 0
 254:	09 f1       	breq	.+66     	; 0x298 <free+0x60>
 256:	40 e0       	ldi	r20, 0x00	; 0
 258:	50 e0       	ldi	r21, 0x00	; 0
 25a:	ac 17       	cp	r26, r28
 25c:	bd 07       	cpc	r27, r29
 25e:	08 f1       	brcs	.+66     	; 0x2a2 <free+0x6a>
 260:	bb 83       	std	Y+3, r27	; 0x03
 262:	aa 83       	std	Y+2, r26	; 0x02
 264:	fe 01       	movw	r30, r28
 266:	21 91       	ld	r18, Z+
 268:	31 91       	ld	r19, Z+
 26a:	e2 0f       	add	r30, r18
 26c:	f3 1f       	adc	r31, r19
 26e:	ae 17       	cp	r26, r30
 270:	bf 07       	cpc	r27, r31
 272:	79 f4       	brne	.+30     	; 0x292 <free+0x5a>
 274:	8d 91       	ld	r24, X+
 276:	9c 91       	ld	r25, X
 278:	11 97       	sbiw	r26, 0x01	; 1
 27a:	28 0f       	add	r18, r24
 27c:	39 1f       	adc	r19, r25
 27e:	2e 5f       	subi	r18, 0xFE	; 254
 280:	3f 4f       	sbci	r19, 0xFF	; 255
 282:	39 83       	std	Y+1, r19	; 0x01
 284:	28 83       	st	Y, r18
 286:	12 96       	adiw	r26, 0x02	; 2
 288:	8d 91       	ld	r24, X+
 28a:	9c 91       	ld	r25, X
 28c:	13 97       	sbiw	r26, 0x03	; 3
 28e:	9b 83       	std	Y+3, r25	; 0x03
 290:	8a 83       	std	Y+2, r24	; 0x02
 292:	41 15       	cp	r20, r1
 294:	51 05       	cpc	r21, r1
 296:	71 f4       	brne	.+28     	; 0x2b4 <free+0x7c>
 298:	d0 93 09 01 	sts	0x0109, r29
 29c:	c0 93 08 01 	sts	0x0108, r28
 2a0:	20 c0       	rjmp	.+64     	; 0x2e2 <free+0xaa>
 2a2:	12 96       	adiw	r26, 0x02	; 2
 2a4:	8d 91       	ld	r24, X+
 2a6:	9c 91       	ld	r25, X
 2a8:	13 97       	sbiw	r26, 0x03	; 3
 2aa:	ad 01       	movw	r20, r26
 2ac:	00 97       	sbiw	r24, 0x00	; 0
 2ae:	11 f0       	breq	.+4      	; 0x2b4 <free+0x7c>
 2b0:	dc 01       	movw	r26, r24
 2b2:	d3 cf       	rjmp	.-90     	; 0x25a <free+0x22>
 2b4:	fa 01       	movw	r30, r20
 2b6:	d3 83       	std	Z+3, r29	; 0x03
 2b8:	c2 83       	std	Z+2, r28	; 0x02
 2ba:	21 91       	ld	r18, Z+
 2bc:	31 91       	ld	r19, Z+
 2be:	e2 0f       	add	r30, r18
 2c0:	f3 1f       	adc	r31, r19
 2c2:	ce 17       	cp	r28, r30
 2c4:	df 07       	cpc	r29, r31
 2c6:	69 f4       	brne	.+26     	; 0x2e2 <free+0xaa>
 2c8:	88 81       	ld	r24, Y
 2ca:	99 81       	ldd	r25, Y+1	; 0x01
 2cc:	28 0f       	add	r18, r24
 2ce:	39 1f       	adc	r19, r25
 2d0:	2e 5f       	subi	r18, 0xFE	; 254
 2d2:	3f 4f       	sbci	r19, 0xFF	; 255
 2d4:	fa 01       	movw	r30, r20
 2d6:	31 83       	std	Z+1, r19	; 0x01
 2d8:	20 83       	st	Z, r18
 2da:	8a 81       	ldd	r24, Y+2	; 0x02
 2dc:	9b 81       	ldd	r25, Y+3	; 0x03
 2de:	93 83       	std	Z+3, r25	; 0x03
 2e0:	82 83       	std	Z+2, r24	; 0x02
 2e2:	df 91       	pop	r29
 2e4:	cf 91       	pop	r28
 2e6:	08 95       	ret

000002e8 <strcpy_P>:
 2e8:	fb 01       	movw	r30, r22
 2ea:	dc 01       	movw	r26, r24
 2ec:	05 90       	lpm	r0, Z+
 2ee:	0d 92       	st	X+, r0
 2f0:	00 20       	and	r0, r0
 2f2:	e1 f7       	brne	.-8      	; 0x2ec <strcpy_P+0x4>
 2f4:	08 95       	ret

000002f6 <_exit>:
 2f6:	f8 94       	cli

000002f8 <__stop_program>:
 2f8:	ff cf       	rjmp	.-2      	; 0x2f8 <__stop_program>
